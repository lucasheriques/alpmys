// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Microsoft.EntityFrameworkCore.ValueGeneration;
using RestfulApi.Models;
using System;

namespace restfulapi.Migrations
{
    [DbContext(typeof(AlpmysContext))]
    partial class AlpmysContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011");

            modelBuilder.Entity("RestfulApi.Models.CartaoDeCredito", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Bandeira");

                    b.Property<int>("CodigoDeSeguranca");

                    b.Property<string>("NomeImpressoCartao");

                    b.Property<string>("NumeroDoCartao");

                    b.Property<long?>("UsuarioId");

                    b.Property<DateTime>("Validade");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("CartaoDeCredito");
                });

            modelBuilder.Entity("RestfulApi.Models.Compra", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataCompra");

                    b.Property<DateTime>("DataVencimento");

                    b.Property<string>("FormaPagamento");

                    b.Property<int>("QuantidadeIngressos");

                    b.Property<string>("Status");

                    b.Property<long>("UsuarioId");

                    b.Property<float>("ValorCompra");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Compra");
                });

            modelBuilder.Entity("RestfulApi.Models.Conquistas", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Avaliacao");

                    b.Property<string>("Descricao");

                    b.Property<long>("OrganizadorId");

                    b.HasKey("Id");

                    b.ToTable("Conquistas");
                });

            modelBuilder.Entity("RestfulApi.Models.ContaBancaria", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Agencia");

                    b.Property<string>("Banco");

                    b.Property<int>("Cnpj");

                    b.Property<string>("Conta");

                    b.Property<string>("Cpf");

                    b.Property<string>("Favorecido");

                    b.Property<long>("OrganizadorId");

                    b.Property<string>("Tipo");

                    b.HasKey("Id");

                    b.HasIndex("OrganizadorId");

                    b.ToTable("ContaBancaria");
                });

            modelBuilder.Entity("RestfulApi.Models.Contato", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("OrganizadorId");

                    b.Property<string>("Responsavel");

                    b.Property<string>("tipoContato");

                    b.HasKey("Id");

                    b.HasIndex("OrganizadorId");

                    b.ToTable("Contato");
                });

            modelBuilder.Entity("RestfulApi.Models.Endereco", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Bairro");

                    b.Property<string>("Cep");

                    b.Property<string>("Cidade");

                    b.Property<string>("Complemento");

                    b.Property<string>("Logradouro");

                    b.Property<int>("Numero");

                    b.Property<string>("Uf");

                    b.Property<long>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("RestfulApi.Models.Evento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Data");

                    b.Property<string>("Descricao");

                    b.Property<DateTime>("HorarioInicio");

                    b.Property<DateTime>("HorarioTermino");

                    b.Property<string>("LinkPagina");

                    b.Property<long>("LocalId");

                    b.Property<string>("Nome");

                    b.Property<long>("OrganizadorId");

                    b.Property<long>("TipoDeEventoId");

                    b.HasKey("Id");

                    b.HasIndex("LocalId");

                    b.HasIndex("OrganizadorId");

                    b.HasIndex("TipoDeEventoId");

                    b.ToTable("Evento");
                });

            modelBuilder.Entity("RestfulApi.Models.Ingresso", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Celular");

                    b.Property<string>("Email");

                    b.Property<long>("EventoID");

                    b.Property<string>("Nome");

                    b.Property<string>("NumeroDoIngresso");

                    b.Property<long>("OrganizadorId");

                    b.Property<long>("PromocaoId");

                    b.Property<string>("Sobrenome");

                    b.Property<long>("TipoIngressoId");

                    b.HasKey("Id");

                    b.HasIndex("EventoID");

                    b.HasIndex("OrganizadorId");

                    b.HasIndex("PromocaoId");

                    b.HasIndex("TipoIngressoId");

                    b.ToTable("Ingresso");
                });

            modelBuilder.Entity("RestfulApi.Models.Local", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CapacidadeDePessoas");

                    b.Property<string>("Descricao");

                    b.Property<long>("EnderecoId");

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.ToTable("Local");
                });

            modelBuilder.Entity("RestfulApi.Models.Pontos", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataVencimento");

                    b.Property<float>("PontosAExpirar");

                    b.Property<float>("Valor");

                    b.HasKey("Id");

                    b.ToTable("Pontos");
                });

            modelBuilder.Entity("RestfulApi.Models.Promocao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CodigoPromocional");

                    b.Property<long>("EventoId");

                    b.Property<int>("PorcentagemDeDesconto");

                    b.Property<int>("QuantidadeIngressos");

                    b.HasKey("Id");

                    b.HasIndex("EventoId");

                    b.ToTable("Promocao");
                });

            modelBuilder.Entity("RestfulApi.Models.Sorteio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataFim");

                    b.Property<DateTime>("DataInicio");

                    b.Property<DateTime>("HorarioFim");

                    b.Property<DateTime>("HorarioInicio");

                    b.Property<string>("Nome");

                    b.Property<string>("Observacao");

                    b.Property<long>("OrganizadorId");

                    b.Property<string>("Premios");

                    b.Property<string>("descricao");

                    b.HasKey("Id");

                    b.HasIndex("OrganizadorId");

                    b.ToTable("Sorteio");
                });

            modelBuilder.Entity("RestfulApi.Models.Telefone", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("ContatoId");

                    b.Property<string>("Ddd");

                    b.Property<string>("NumeroTelefone");

                    b.HasKey("Id");

                    b.HasIndex("ContatoId");

                    b.ToTable("Telefone");
                });

            modelBuilder.Entity("RestfulApi.Models.TipoDeEvento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Tipo");

                    b.HasKey("Id");

                    b.ToTable("TipoDeEvento");
                });

            modelBuilder.Entity("RestfulApi.Models.TipoIngresso", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataInicio");

                    b.Property<int>("IngressosRestante");

                    b.Property<int>("NumeroLote");

                    b.Property<int>("Quantidade");

                    b.Property<float>("Taxa");

                    b.Property<string>("Tipo");

                    b.Property<float>("Valor");

                    b.HasKey("Id");

                    b.ToTable("TipoIngresso");
                });

            modelBuilder.Entity("RestfulApi.Models.Usuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Cpf");

                    b.Property<DateTime>("DataNascimento");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Email");

                    b.Property<string>("Nome");

                    b.Property<bool>("Organizador");

                    b.Property<long>("PontosId");

                    b.Property<string>("Senha");

                    b.Property<string>("Sobrenome");

                    b.Property<long>("WishListId");

                    b.HasKey("Id");

                    b.HasIndex("PontosId");

                    b.HasIndex("WishListId");

                    b.ToTable("Usuario");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Usuario");
                });

            modelBuilder.Entity("RestfulApi.Models.UsuarioCartaoDeCredito", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("CartaoDeCreditoId");

                    b.Property<long?>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("CartaoDeCreditoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Possui");
                });

            modelBuilder.Entity("RestfulApi.Models.UsuarioSorteio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("SorteioId");

                    b.Property<long>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("SorteioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Participa");
                });

            modelBuilder.Entity("WishList", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("WishList");
                });

            modelBuilder.Entity("RestfulApi.Models.Organizador", b =>
                {
                    b.HasBaseType("RestfulApi.Models.Usuario");

                    b.Property<string>("Cnpj");

                    b.Property<DateTime>("OrganizadorDesde");

                    b.Property<string>("Responsavel");

                    b.Property<string>("UrlSite");

                    b.ToTable("Organizador");

                    b.HasDiscriminator().HasValue("Organizador");
                });

            modelBuilder.Entity("RestfulApi.Models.CartaoDeCredito", b =>
                {
                    b.HasOne("RestfulApi.Models.Usuario")
                        .WithMany("CartaoDeCredito")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("RestfulApi.Models.Compra", b =>
                {
                    b.HasOne("RestfulApi.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RestfulApi.Models.ContaBancaria", b =>
                {
                    b.HasOne("RestfulApi.Models.Organizador", "Organizador")
                        .WithMany()
                        .HasForeignKey("OrganizadorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RestfulApi.Models.Contato", b =>
                {
                    b.HasOne("RestfulApi.Models.Organizador", "Organizador")
                        .WithMany()
                        .HasForeignKey("OrganizadorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RestfulApi.Models.Endereco", b =>
                {
                    b.HasOne("RestfulApi.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RestfulApi.Models.Evento", b =>
                {
                    b.HasOne("RestfulApi.Models.Local", "Local")
                        .WithMany()
                        .HasForeignKey("LocalId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RestfulApi.Models.Organizador", "Organizador")
                        .WithMany()
                        .HasForeignKey("OrganizadorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RestfulApi.Models.TipoDeEvento", "TipoDeEvento")
                        .WithMany()
                        .HasForeignKey("TipoDeEventoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RestfulApi.Models.Ingresso", b =>
                {
                    b.HasOne("RestfulApi.Models.Evento", "Evento")
                        .WithMany()
                        .HasForeignKey("EventoID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RestfulApi.Models.Organizador", "Organizador")
                        .WithMany()
                        .HasForeignKey("OrganizadorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RestfulApi.Models.Promocao", "Promocao")
                        .WithMany()
                        .HasForeignKey("PromocaoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RestfulApi.Models.TipoIngresso", "TipoIngresso")
                        .WithMany()
                        .HasForeignKey("TipoIngressoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RestfulApi.Models.Local", b =>
                {
                    b.HasOne("RestfulApi.Models.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RestfulApi.Models.Promocao", b =>
                {
                    b.HasOne("RestfulApi.Models.Evento", "Evento")
                        .WithMany()
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RestfulApi.Models.Sorteio", b =>
                {
                    b.HasOne("RestfulApi.Models.Organizador", "Organizador")
                        .WithMany()
                        .HasForeignKey("OrganizadorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RestfulApi.Models.Telefone", b =>
                {
                    b.HasOne("RestfulApi.Models.Contato", "Contato")
                        .WithMany()
                        .HasForeignKey("ContatoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RestfulApi.Models.Usuario", b =>
                {
                    b.HasOne("RestfulApi.Models.Pontos", "Pontos")
                        .WithMany()
                        .HasForeignKey("PontosId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WishList", "WishList")
                        .WithMany()
                        .HasForeignKey("WishListId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RestfulApi.Models.UsuarioCartaoDeCredito", b =>
                {
                    b.HasOne("RestfulApi.Models.CartaoDeCredito", "CartaoDeCredito")
                        .WithMany()
                        .HasForeignKey("CartaoDeCreditoId");

                    b.HasOne("RestfulApi.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("RestfulApi.Models.UsuarioSorteio", b =>
                {
                    b.HasOne("RestfulApi.Models.Sorteio", "Sorteio")
                        .WithMany()
                        .HasForeignKey("SorteioId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RestfulApi.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
